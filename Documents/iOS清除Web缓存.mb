#pragma mark - 清除缓存

// 清理缓存的方法，这个方法会清除缓存类型为HTML类型的文件
- (void)clearCache {
    // 取得Library文件夹的位置
    NSString *libraryDir = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES) firstObject];
    // 取得bundle id，用作文件拼接用
    NSString *bundleId = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleIdentifier"];
    // 拼接缓存地址，具体目录为App/Library/Caches/AppBundleID/fsCacheData
    NSString *webKitFolderInCachesfs = [NSString stringWithFormat:@"%@/Caches/%@/fsCachedData",libraryDir,bundleId];
    NSError *error;
    // 取得目录下所有的文件，取得文件数组
    NSFileManager *fileManager = [NSFileManager defaultManager];
    // fileList便是包含有该文件夹下所有的文件名及文件夹名的数组
    NSArray *fileList = [fileManager contentsOfDirectoryAtPath:webKitFolderInCachesfs error:&error];
    // 遍历文件组成的数组
    for ( NSString *fileName in fileList ) {
        // 定位每个文件的位置
        NSString *path = [[NSBundle bundleWithPath:webKitFolderInCachesfs] pathForResource:fileName ofType:@""];
        // 将文件转换为NSData类型的数据
        NSData *fileData = [NSData dataWithContentsOfFile:path];
        // 如果fileData的长度大于2，说明fileData不为空
        if ( fileData.length > 2 ) {
            // 创建两个用于显示文件类型的变量
            int char1 = 0;
            int char2 = 0;
            
            [fileData getBytes:&char1 range:NSMakeRange(0, 1)];
            [fileData getBytes:&char2 range:NSMakeRange(1, 1)];
            // 拼接两个变量
            NSString *numStr = [NSString stringWithFormat:@"%i%i", char1, char2];
            // 如果该文件前四个字符是6033，说明是html文件，删除本地的缓存
            if ( [numStr isEqualToString:@"6033"] ) {
                [[NSFileManager defaultManager] removeItemAtPath:[NSString stringWithFormat:@"%@/%@", webKitFolderInCachesfs, fileName] error:&error];
                continue;
            }
        }
    }
}
