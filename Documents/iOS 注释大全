注释规范
      良好的编码规范是程序员必备的素质，编码中的代码注释尤为重要，健全的代码注释可以提高代码可读性和维护性，不仅为了标识此块代码的含义，很多时候包含了对业务逻辑的解释，项目中难免有逻辑复杂之处，不加注释的代码，数日后自己看都会觉得陌生，更不要说其他人看了，今天分享一下Objective-C开发中常用的代码注释方式以及应用场合。

注释形式
注释形式主要有：

单行注释，多行注释，方法注释，方法集注释（配合代码块实现快速注释）
1. 单行注释

使用 // 注释单行代码，最常见的使用场景是在方法内注释某个属性或某块区域的含义，如下图：




2. 多行注释

使用 /** 文本 **/ 的注释格式（快捷键cmd+alt+/）可以对属性和类以及方法进行注释，与//不同的是，该注释方式可以写多行，一般使用在类的头文件，多行介绍当前类的含义，如下图：


3. 方法注释

与方法2相同，使用 /** 文本 **/ 的注释格式（快捷键cmd+alt+/）可以对方法进行注释，快捷键会根据方法参数自动生成需要填写的注释内容，并且在其他地方使用该方法时，Xcode会智能提示出之前写的注释内容，如下图：

在方法上方使用快捷键 cmd+alt+/：


使用该方法时显示注释内容：


4：方法集注释（配合代码块实现快速注释）

先介绍一下，何为方法集注释，通常没有添加方法集的类是这样的：


为了快速定位类中的某块代码，或某个方法，Xcode为我们提供了方法集的注释方式，可大大减少搜寻目标代码的时间，如图：


这样就能对类中的方法和模块一览无余，要查找或修改的时候可以迅速定位，节省时间，提高自我体验。

实现方法：

#pragma mark  <#注释的内容#>

或

#pragma mark -  <#注释的内容#>

加上横线代表这是一块区域，在预览时有灰色分割线，反之则没有。

但是每次敲这些字符一定不是你想要的效果，在Xcode8之前可以使用VVDocumenter增强版（个人在原基础上修改添加方法集注释功能），由于Xcode8默认禁用使用插件，所以我们采用代码块+快捷键的方式来实现，效果也是酸爽：


上图中，就是我使用代码块+快捷键来实现的方法集注释，编写方便，快捷，具体实现步骤如下：

在任何一个 .m 文件中，敲出自己要定义的代码块，例如：

#pragma mark -  <#注释的内容#>

鼠标选中上述代码，按住左键 1秒钟，然后拖到右下方代码块区域

并设置快捷键：


这样就大功告成，保存代码块，在代码中使用预设的快捷键，编译器会自动提示，回车，输入即可。

注意：

在.h中建立的代码块会导致在.m中无法使用，而在.m中建立的可以通用。

必须按住一秒再拖动，否则会拖不了

使用 <# 自定义注释内容 #> 这样打出来的提示，可以使用Tab键快速转到

快捷键代码块快速注释
